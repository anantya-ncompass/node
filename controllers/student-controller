const { connection } = require("../utilities/connection");
const { login, studentformat } = require("../utilities/validation");




const create = (req, res) => {
  let { ID, NAME, DEPARTMENT, CGPA } = req.body;
  console.log(ID, NAME, DEPARTMENT, CGPA);
  let val = studentformat.validate(req.body)
    if(val.error){
        res.status(401).json({
            success : false,
            message : val.error.message
        })
        return
    }  

  connection.query(
    "INSERT INTO student VALUES (?, ?, ?,?)",
    [ID, NAME, DEPARTMENT,CGPA],
    (err, result) => {
      if (err || result.length === 0) {
        res.status(400).json({
          success: err ? false : true,
          message: err
            ? err.message
            : `inserted ${result.affectedRows} records`,
          data: result,
        });
      }
      res.status(201).json({
        success: true,
        message: `inserted ${result.affectedRows} records`,
        data: result,
      });
    }
  );
};


const delete_data = (req, res) => {
    let id = req.params.id;
    connection.query(
      "DELETE FROM student WHERE ID = ?",
      [id],
      function (err, results, fields) {
        res.json(results);
      }
    );
    connection.commit();
  };


  const read = (req, res) => {
    let  { col_name } = req.body;
    console.log(col_name)
    connection.query(
      `SELECT ${col_name.replace(/['"]+/g, "")} FROM student;`,
      function (err, results, fields) {
        res.status(200).json(results);
      }
    );
  };


  const readAll = (req, res) => {
    connection.query("SELECT * FROM student", function (err, results, fields) {
      res.json(results);
    });
  };


  const update = (req, res) => {
    let { ID, NAME } = req.params;
    connection.query(
      `update STUDENT set NAME = "${NAME}" where ID = "${ID}"`,
      (err, result) => {
        res.status(200).send("Updated Successfully");
      }
    );
    connection.commit();
  };

  const studentLogin = (req,res) =>{
    let val = login .validate(req.body)
    if(val.error){
        res.status(401).json({
            success : false,
            message : val.error.message
        })
        return
    }  
    res.status(201).json({
        success : true,
        message : "logged in",
        result : val.value
    })
    return
}


module.exports = { studentLogin, create, delete_data, update, read, readAll };

